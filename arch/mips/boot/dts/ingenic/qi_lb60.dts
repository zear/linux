// SPDX-License-Identifier: GPL-2.0
/dts-v1/;

#include "jz4740.dtsi"
#include <dt-bindings/gpio/gpio.h>

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

#define KEY_QI_QI	KEY_F13
#define KEY_QI_UPRED	KEY_RIGHTALT
#define KEY_QI_VOLUP	KEY_VOLUMEUP
#define KEY_QI_VOLDOWN	KEY_VOLUMEDOWN
#define KEY_QI_FN	KEY_LEFTCTRL

/ {
	compatible = "qi,lb60", "ingenic,jz4740";

	chosen {
		stdout-path = &uart0;
	};

	beeper {
		compatible = "pwm-beeper";
		pwms = <&pwm 4 0 0>;

		pinctrl-names = "default";
		pinctrl-0 = <&pins_pwm4>;
	};

	mmc_power: fixedregulator {
		compatible = "regulator-fixed";
		regulator-name = "mmc_vcc";
		gpio = <&gpd 2 0>;

		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	amp_supply: fixedregulator-2 {
		compatible = "regulator-fixed";
		regulator-name = "amp_supply";
		enable-gpios = <&gpd 4 GPIO_ACTIVE_HIGH>;

		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	amp: audio-amp {
		compatible = "simple-audio-amplifier";
		enable-gpios = <&gpb 29 GPIO_ACTIVE_HIGH>;
		VCC-supply = <&amp_supply>;
	};

	sound-card {
		compatible = "simple-audio-card";

		simple-audio-card,name = "lb60-audio";
		simple-audio-card,format = "i2s";

		simple-audio-card,widgets =
			"Speaker", "Speaker",
			"Microphone", "Mic";
		simple-audio-card,routing =
			"MIC", "Mic",
			"Speaker", "OUTL",
			"INL", "LOUT",
			"INL", "ROUT";

		simple-audio-card,aux-devs = <&amp>;

		simple-audio-card,bitclock-master = <&dai_codec>;
		simple-audio-card,frame-master = <&dai_codec>;

		dai_cpu: simple-audio-card,cpu {
			sound-dai = <&aic>;
		};

		dai_codec: simple-audio-card,codec {
			sound-dai = <&codec>;
		};
	};

	power-key {
		compatible = "gpio-keys";

		power {
			label = "Power";
			wakeup-source;
			linux,code = <KEY_POWER>;
			gpios = <&gpd 29 GPIO_ACTIVE_LOW>;
		};
	};

	keypad {
		compatible = "gpio-matrix-keypad";

		col-scan-delay-us = <10>;
		debounce-delay-ms = <10>;
		wakeup-source;

		row-gpios = <
		  &gpd 18 GPIO_ACTIVE_LOW &gpd 19 GPIO_ACTIVE_LOW
		  &gpd 20 GPIO_ACTIVE_LOW &gpd 21 GPIO_ACTIVE_LOW
		  &gpd 22 GPIO_ACTIVE_LOW &gpd 23 GPIO_ACTIVE_LOW
		  &gpd 24 GPIO_ACTIVE_LOW &gpd 26 GPIO_ACTIVE_LOW>;
		col-gpios = <
		  &gpc 10 GPIO_ACTIVE_LOW &gpc 11 GPIO_ACTIVE_LOW
		  &gpc 12 GPIO_ACTIVE_LOW &gpc 13 GPIO_ACTIVE_LOW
		  &gpc 14 GPIO_ACTIVE_LOW &gpc 15 GPIO_ACTIVE_LOW
		  &gpc 16 GPIO_ACTIVE_LOW &gpc 17 GPIO_ACTIVE_LOW>;

		linux,keymap = <
			MATRIX_KEY(0, 0, KEY_F1)	/* S2 */
			MATRIX_KEY(0, 1, KEY_F2)	/* S3 */
			MATRIX_KEY(0, 2, KEY_F3)	/* S4 */
			MATRIX_KEY(0, 3, KEY_F4)	/* S5 */
			MATRIX_KEY(0, 4, KEY_F5)	/* S6 */
			MATRIX_KEY(0, 5, KEY_F6)	/* S7 */
			MATRIX_KEY(0, 6, KEY_F7)	/* S8 */

			MATRIX_KEY(1, 0, KEY_Q)	/* S10 */
			MATRIX_KEY(1, 1, KEY_W)	/* S11 */
			MATRIX_KEY(1, 2, KEY_E)	/* S12 */
			MATRIX_KEY(1, 3, KEY_R)	/* S13 */
			MATRIX_KEY(1, 4, KEY_T)	/* S14 */
			MATRIX_KEY(1, 5, KEY_Y)	/* S15 */
			MATRIX_KEY(1, 6, KEY_U)	/* S16 */
			MATRIX_KEY(1, 7, KEY_I)	/* S17 */
			MATRIX_KEY(2, 0, KEY_A)	/* S18 */
			MATRIX_KEY(2, 1, KEY_S)	/* S19 */
			MATRIX_KEY(2, 2, KEY_D)	/* S20 */
			MATRIX_KEY(2, 3, KEY_F)	/* S21 */
			MATRIX_KEY(2, 4, KEY_G)	/* S22 */
			MATRIX_KEY(2, 5, KEY_H)	/* S23 */
			MATRIX_KEY(2, 6, KEY_J)	/* S24 */
			MATRIX_KEY(2, 7, KEY_K)	/* S25 */
			MATRIX_KEY(3, 0, KEY_ESC)	/* S26 */
			MATRIX_KEY(3, 1, KEY_Z)	/* S27 */
			MATRIX_KEY(3, 2, KEY_X)	/* S28 */
			MATRIX_KEY(3, 3, KEY_C)	/* S29 */
			MATRIX_KEY(3, 4, KEY_V)	/* S30 */
			MATRIX_KEY(3, 5, KEY_B)	/* S31 */
			MATRIX_KEY(3, 6, KEY_N)	/* S32 */
			MATRIX_KEY(3, 7, KEY_M)	/* S33 */
			MATRIX_KEY(4, 0, KEY_TAB)	/* S34 */
			MATRIX_KEY(4, 1, KEY_CAPSLOCK)	/* S35 */
			MATRIX_KEY(4, 2, KEY_BACKSLASH)	/* S36 */
			MATRIX_KEY(4, 3, KEY_APOSTROPHE)	/* S37 */
			MATRIX_KEY(4, 4, KEY_COMMA)	/* S38 */
			MATRIX_KEY(4, 5, KEY_DOT)	/* S39 */
			MATRIX_KEY(4, 6, KEY_SLASH)	/* S40 */
			MATRIX_KEY(4, 7, KEY_UP)	/* S41 */
			MATRIX_KEY(5, 0, KEY_O)	/* S42 */
			MATRIX_KEY(5, 1, KEY_L)	/* S43 */
			MATRIX_KEY(5, 2, KEY_EQUAL)	/* S44 */
			MATRIX_KEY(5, 3, KEY_QI_UPRED)	/* S45 */
			MATRIX_KEY(5, 4, KEY_SPACE)	/* S46 */
			MATRIX_KEY(5, 5, KEY_QI_QI)	/* S47 */
			MATRIX_KEY(5, 6, KEY_RIGHTCTRL)	/* S48 */
			MATRIX_KEY(5, 7, KEY_LEFT)	/* S49 */
			MATRIX_KEY(6, 0, KEY_F8)	/* S50 */
			MATRIX_KEY(6, 1, KEY_P)	/* S51 */
			MATRIX_KEY(6, 2, KEY_BACKSPACE)/* S52 */
			MATRIX_KEY(6, 3, KEY_ENTER)	/* S53 */
			MATRIX_KEY(6, 4, KEY_QI_VOLUP)	/* S54 */
			MATRIX_KEY(6, 5, KEY_QI_VOLDOWN)	/* S55 */
			MATRIX_KEY(6, 6, KEY_DOWN)	/* S56 */
			MATRIX_KEY(6, 7, KEY_RIGHT)	/* S57 */

			MATRIX_KEY(7, 0, KEY_LEFTSHIFT)	/* S58 */
			MATRIX_KEY(7, 1, KEY_LEFTALT) /* S59 */
			MATRIX_KEY(7, 2, KEY_QI_FN)	/* S60 */
			>;
	};
};

&ext {
	clock-frequency = <12000000>;
};

&rtc_dev {
	system-power-controller;
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pins_uart0>;
};

&pinctrl {
	pins_uart0: uart0 {
		function = "uart0";
		groups = "uart0-data";
		bias-disable;
	};

	pins_pwm4: pwm4 {
		function = "pwm4";
		groups = "pwm4";
		bias-disable;
	};

	pins_mmc: mmc {
		mmc {
			function = "mmc";
			groups = "mmc-1bit", "mmc-4bit";
			bias-disable;
		};

		mmc-gpios {
			pins = "PD0", "PD2";
			bias-disable;
		};
	};

	pins_nemc: nemc {
		function = "nand";
		groups = "nand-cs1";
	};
};

&tcu {
	/* 750 kHz for the system timer and clocksource */
	assigned-clocks = <&tcu TCU_CLK_TIMER0>, <&tcu TCU_CLK_TIMER1>;
	assigned-clock-rates = <750000>, <750000>;
};

&mmc {
	bus-width = <4>;
	max-frequency = <24000000>;
	cd-gpios = <&gpd 0 GPIO_ACTIVE_HIGH>;
	vmmc-supply = <&mmc_power>;

	pinctrl-names = "default";
	pinctrl-0 = <&pins_mmc>;
};

&nemc {
	nandc: nand-controller@1 {
		compatible = "ingenic,jz4725b-nand";
		reg = <1 0 0x4000000>;

		#address-cells = <1>;
		#size-cells = <0>;

		ingenic,bch-controller = <&bch>;

		pinctrl-names = "default";
		pinctrl-0 = <&pins_nemc>;

		rb-gpios = <&gpc 30 GPIO_ACTIVE_LOW>;

		nand@1 {
			reg = <1>;

			nand-ecc-step-size = <512>;
			nand-ecc-strength = <4>;
			nand-ecc-mode = "hw";
			nand-is-boot-medium;
			nand-on-flash-bbt;

			partitions {
				compatible = "fixed-partitions";
				#address-cells = <1>;
				#size-cells = <1>;

				partition@0 {
					label = "boot";
					reg = <0x0 0x400000>;
				};

				partition@400000 {
					label = "kernel";
					reg = <0x400000 0x400000>;
				};

				partition@800000 {
					label = "rootfs";
					reg = <0x800000 0x0>;
				};
			};
		};
	};
};
